\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cp}{\PYGZsh{}include}\PYG{+w}{ }\PYG{c+cpf}{\PYGZdq{}pch.h\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include}\PYG{+w}{ }\PYG{c+cpf}{\PYGZdq{}PipeManager.h\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include}\PYG{+w}{ }\PYG{c+cpf}{\PYGZlt{}iostream\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include}\PYG{+w}{ }\PYG{c+cpf}{\PYGZdq{}PipeConstants.h\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include}\PYG{+w}{ }\PYG{c+cpf}{\PYGZlt{}algorithm\PYGZgt{}}

\PYG{c+cp}{\PYGZsh{}pragma region Private Methods}
\PYG{n}{std}\PYG{o}{::}\PYG{n}{wstring}\PYG{+w}{ }\PYG{n+nf}{PipeManager::WidenString}\PYG{p}{(}\PYG{n}{std}\PYG{o}{::}\PYG{n}{string}\PYG{+w}{ }\PYG{n}{input}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{k}{return}\PYG{+w}{ }\PYG{n}{std}\PYG{o}{::}\PYG{n}{wstring}\PYG{p}{(}\PYG{n}{input}\PYG{p}{.}\PYG{n}{begin}\PYG{p}{(),}\PYG{+w}{ }\PYG{n}{input}\PYG{p}{.}\PYG{n}{end}\PYG{p}{());}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n+nf}{PipeManager::ReadToNull}\PYG{p}{(}\PYG{n}{BYTE}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{outBuffer}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{n}{DWORD}\PYG{+w}{ }\PYG{n}{read}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{;}\PYG{+w}{ }\PYG{c+c1}{// Number of bytes read in each ReadFile() call}
\PYG{+w}{	}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{index}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{;}
\PYG{+w}{	}\PYG{k}{do}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{o}{!}\PYG{n}{ReadFile}\PYG{p}{(}\PYG{n}{pipeHandle}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{outBuffer}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{n}{index}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{,}\PYG{+w}{ }\PYG{o}{\PYGZam{}}\PYG{n}{read}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{NULL}\PYG{p}{))}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{			}\PYG{n}{std}\PYG{o}{::}\PYG{n}{cerr}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}Failed to read from the named pipe, error code \PYGZdq{}}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{n}{GetLastError}\PYG{p}{()}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{n}{std}\PYG{o}{::}\PYG{n}{endl}\PYG{p}{;}
\PYG{+w}{			}\PYG{k}{break}\PYG{p}{;}
\PYG{+w}{		}\PYG{p}{\PYGZcb{}}
\PYG{+w}{		}\PYG{n}{index}\PYG{o}{++}\PYG{p}{;}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}\PYG{+w}{ }\PYG{k}{while}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{outBuffer}\PYG{p}{[}\PYG{n}{index}\PYG{+w}{ }\PYG{o}{\PYGZhy{}}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// Stop if the most recent byte was null\PYGZhy{}termination}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{bool}\PYG{+w}{ }\PYG{n+nf}{PipeManager::Read}\PYG{p}{(}\PYG{n}{BYTE}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{outBuffer}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{bytesToRead}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{n}{DWORD}\PYG{+w}{ }\PYG{n}{bytesRead}\PYG{p}{;}
\PYG{+w}{	}\PYG{k}{return}\PYG{+w}{ }\PYG{n}{ReadFile}\PYG{p}{(}\PYG{n}{pipeHandle}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{outBuffer}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{bytesToRead}\PYG{p}{,}\PYG{+w}{ }\PYG{o}{\PYGZam{}}\PYG{n}{bytesRead}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{NULL}\PYG{p}{)}\PYG{+w}{ }\PYG{o}{\PYGZam{}\PYGZam{}}\PYG{+w}{ }\PYG{n}{bytesRead}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{n}{bytesToRead}\PYG{p}{;}\PYG{+w}{ }\PYG{c+c1}{// Success if bytes were read, and enough bytes were read}
\PYG{p}{\PYGZcb{}}

\PYG{n}{BYTE}\PYG{+w}{ }\PYG{n+nf}{PipeManager::Read}\PYG{p}{()}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{n}{BYTE}\PYG{+w}{ }\PYG{n}{outputByte}\PYG{p}{;}
\PYG{+w}{	}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{o}{!}\PYG{n}{ReadFile}\PYG{p}{(}\PYG{n}{pipeHandle}\PYG{p}{,}\PYG{+w}{ }\PYG{o}{\PYGZam{}}\PYG{n}{outputByte}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{,}\PYG{+w}{ }\PYG{k}{nullptr}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{NULL}\PYG{p}{))}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{std}\PYG{o}{::}\PYG{n}{cerr}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}Failed to read from the named pipe, error code \PYGZdq{}}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{n}{GetLastError}\PYG{p}{()}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{n}{std}\PYG{o}{::}\PYG{n}{endl}\PYG{p}{;}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{k}{return}\PYG{+w}{ }\PYG{n}{outputByte}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n+nf}{PipeManager::Write}\PYG{p}{(}\PYG{k}{const}\PYG{+w}{ }\PYG{n}{BYTE}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{DWORD}\PYG{+w}{ }\PYG{n}{bufferLength}\PYG{p}{)}
\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{o}{!}\PYG{n}{WriteFile}\PYG{p}{(}\PYG{n}{pipeHandle}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{bufferLength}\PYG{p}{,}\PYG{+w}{ }\PYG{k}{nullptr}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{NULL}\PYG{p}{))}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{std}\PYG{o}{::}\PYG{n}{cerr}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}Failed to write to the named pipe, error code \PYGZdq{}}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{n}{GetLastError}\PYG{p}{()}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{n}{std}\PYG{o}{::}\PYG{n}{endl}\PYG{p}{;}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n+nf}{PipeManager::Write}\PYG{p}{(}\PYG{n}{BYTE}\PYG{+w}{ }\PYG{n}{byte}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{o}{!}\PYG{n}{WriteFile}\PYG{p}{(}\PYG{n}{pipeHandle}\PYG{p}{,}\PYG{+w}{ }\PYG{o}{\PYGZam{}}\PYG{n}{byte}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{,}\PYG{+w}{ }\PYG{k}{nullptr}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{NULL}\PYG{p}{))}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{std}\PYG{o}{::}\PYG{n}{cerr}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}Failed to write to the named pipe, error code \PYGZdq{}}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{n}{GetLastError}\PYG{p}{()}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{n}{std}\PYG{o}{::}\PYG{n}{endl}\PYG{p}{;}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n+nf}{PipeManager::SerialiseField}\PYG{p}{(}\PYG{n}{BYTE}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{REAL}\PYG{o}{**}\PYG{+w}{ }\PYG{n}{field}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{xLength}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{yLength}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{xOffset}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{yOffset}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{c+cm}{/*}
\PYG{c+cm}{	* The thinking is thus:}
\PYG{c+cm}{	* Each \PYGZdq{}row\PYGZdq{} of the field will be stored contiguously}
\PYG{c+cm}{	* The relevant part of these rows will span from (yOffset) to (yOffset + yLength)}
\PYG{c+cm}{	* Therefore each row can be copied directly into the buffer}
\PYG{c+cm}{	* The location in the buffer will have to increment by yLength * sizeof(REAL) each time.}
\PYG{c+cm}{	*/}
\PYG{+w}{	}\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{i}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{;}\PYG{+w}{ }\PYG{n}{i}\PYG{+w}{ }\PYG{o}{\PYGZlt{}}\PYG{+w}{ }\PYG{n}{xLength}\PYG{p}{;}\PYG{+w}{ }\PYG{n}{i}\PYG{o}{++}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{c+c1}{// Copy one row at a time (rows are not guaranteed to be contiguously stored)}
\PYG{+w}{		}\PYG{n}{std}\PYG{o}{::}\PYG{n}{memcpy}\PYG{p}{(}
\PYG{+w}{			}\PYG{n}{buffer}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{n}{i}\PYG{+w}{ }\PYG{o}{*}\PYG{+w}{ }\PYG{n}{yLength}\PYG{+w}{ }\PYG{o}{*}\PYG{+w}{ }\PYG{k}{sizeof}\PYG{p}{(}\PYG{n}{REAL}\PYG{p}{),}\PYG{+w}{ }\PYG{c+c1}{// Start index of destination, buffer + i * column length * 4}
\PYG{+w}{			}\PYG{n}{field}\PYG{p}{[}\PYG{n}{i}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{n}{xOffset}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{n}{yOffset}\PYG{p}{,}\PYG{+w}{ }\PYG{c+c1}{// Start index of source, start index of the column + y offset}
\PYG{+w}{			}\PYG{n}{yLength}\PYG{+w}{ }\PYG{o}{*}\PYG{+w}{ }\PYG{k}{sizeof}\PYG{p}{(}\PYG{n}{REAL}\PYG{p}{)}\PYG{+w}{ }\PYG{c+c1}{// Number of bytes to copy, column size * 4}
\PYG{+w}{		}\PYG{p}{);}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\PYG{c+cp}{\PYGZsh{}pragma endregion}

\PYG{c+cp}{\PYGZsh{}pragma region Constructors/Destructors}
\PYG{c+c1}{// Constructor for a named pipe, yet to be connected to}
\PYG{n}{PipeManager}\PYG{o}{::}\PYG{n}{PipeManager}\PYG{p}{(}\PYG{n}{std}\PYG{o}{::}\PYG{n}{string}\PYG{+w}{ }\PYG{n}{pipeName}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{n}{pipeHandle}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{CreateFile}\PYG{p}{(}\PYG{n}{WidenString}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}}\PYG{l+s+se}{\PYGZbs{}\PYGZbs{}\PYGZbs{}\PYGZbs{}}\PYG{l+s}{.}\PYG{l+s+se}{\PYGZbs{}\PYGZbs{}}\PYG{l+s}{pipe}\PYG{l+s+se}{\PYGZbs{}\PYGZbs{}}\PYG{l+s}{\PYGZdq{}}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{n}{pipeName}\PYG{p}{).}\PYG{n}{c\PYGZus{}str}\PYG{p}{(),}\PYG{+w}{ }\PYG{n}{GENERIC\PYGZus{}READ}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{n}{GENERIC\PYGZus{}WRITE}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{NULL}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{OPEN\PYGZus{}EXISTING}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{n+nb}{NULL}\PYG{p}{);}
\PYG{+w}{	}\PYG{n}{std}\PYG{o}{::}\PYG{n}{cout}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}File opened}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{c+c1}{// Constructor for if the named pipe has already been connected to}
\PYG{n}{PipeManager}\PYG{o}{::}\PYG{n}{PipeManager}\PYG{p}{(}\PYG{n}{HANDLE}\PYG{+w}{ }\PYG{n}{existingHandle}\PYG{p}{)}\PYG{+w}{ }\PYG{o}{:}\PYG{+w}{ }\PYG{n}{pipeHandle}\PYG{p}{(}\PYG{n}{existingHandle}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}\PYGZcb{}}\PYG{+w}{ }\PYG{c+c1}{// Pass the handle into the local handle }

\PYG{n}{PipeManager}\PYG{o}{::\PYGZti{}}\PYG{n}{PipeManager}\PYG{p}{()}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{n}{CloseHandle}\PYG{p}{(}\PYG{n}{pipeHandle}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}
\PYG{c+cp}{\PYGZsh{}pragma endregion}

\PYG{c+cp}{\PYGZsh{}pragma region Public Methods}
\PYG{k+kt}{bool}\PYG{+w}{ }\PYG{n}{PipeManager}\PYG{o}{::}\PYG{n}{Handshake}\PYG{p}{(}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{iMax}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{jMax}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{n}{BYTE}\PYG{+w}{ }\PYG{n}{receivedByte}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{Read}\PYG{p}{();}
\PYG{+w}{	}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{receivedByte}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{o}{::}\PYG{n}{Status}\PYG{o}{::}\PYG{n}{HELLO}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{c+c1}{// We need a HELLO byte}
\PYG{+w}{		}\PYG{n}{std}\PYG{o}{::}\PYG{n}{cerr}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}Handshake not completed \PYGZhy{} server sent malformed request\PYGZdq{}}\PYG{p}{;}
\PYG{+w}{		}\PYG{n}{Write}\PYG{p}{(}\PYG{n}{PipeConstants}\PYG{o}{::}\PYG{n}{Error}\PYG{o}{::}\PYG{n}{BADREQ}\PYG{p}{);}
\PYG{+w}{		}\PYG{k}{return}\PYG{+w}{ }\PYG{n+nb}{false}\PYG{p}{;}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}


\PYG{+w}{	}\PYG{n}{BYTE}\PYG{+w}{ }\PYG{n}{buffer}\PYG{p}{[}\PYG{l+m+mi}{13}\PYG{p}{];}
\PYG{+w}{	}\PYG{n}{buffer}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{o}{::}\PYG{n}{Status}\PYG{o}{::}\PYG{n}{HELLO}\PYG{p}{;}\PYG{+w}{ }\PYG{c+c1}{// Reply with HELLO byte}

\PYG{+w}{	}\PYG{n}{buffer}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{o}{::}\PYG{n}{Marker}\PYG{o}{::}\PYG{n}{PRMSTART}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{o}{::}\PYG{n}{Marker}\PYG{o}{::}\PYG{n}{IMAX}\PYG{p}{;}\PYG{+w}{ }\PYG{c+c1}{// Send iMax, demarked with PRMSTART and PRMEND}
\PYG{+w}{	}\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{i}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{;}\PYG{+w}{ }\PYG{n}{i}\PYG{+w}{ }\PYG{o}{\PYGZlt{}}\PYG{+w}{ }\PYG{l+m+mi}{4}\PYG{p}{;}\PYG{+w}{ }\PYG{n}{i}\PYG{o}{++}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{buffer}\PYG{p}{[}\PYG{n}{i}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{l+m+mi}{2}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{iMax}\PYG{+w}{ }\PYG{o}{\PYGZgt{}\PYGZgt{}}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{i}\PYG{+w}{ }\PYG{o}{*}\PYG{+w}{ }\PYG{l+m+mi}{8}\PYG{p}{);}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{n}{buffer}\PYG{p}{[}\PYG{l+m+mi}{6}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{o}{::}\PYG{n}{Marker}\PYG{o}{::}\PYG{n}{PRMEND}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{o}{::}\PYG{n}{Marker}\PYG{o}{::}\PYG{n}{IMAX}\PYG{p}{;}

\PYG{+w}{	}\PYG{n}{buffer}\PYG{p}{[}\PYG{l+m+mi}{7}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{o}{::}\PYG{n}{Marker}\PYG{o}{::}\PYG{n}{PRMSTART}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{o}{::}\PYG{n}{Marker}\PYG{o}{::}\PYG{n}{JMAX}\PYG{p}{;}\PYG{+w}{ }\PYG{c+c1}{// Send jMax, demarked with PRMSTART and PRMEND}
\PYG{+w}{	}\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{i}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{;}\PYG{+w}{ }\PYG{n}{i}\PYG{+w}{ }\PYG{o}{\PYGZlt{}}\PYG{+w}{ }\PYG{l+m+mi}{4}\PYG{p}{;}\PYG{+w}{ }\PYG{n}{i}\PYG{o}{++}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{buffer}\PYG{p}{[}\PYG{n}{i}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{l+m+mi}{8}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{jMax}\PYG{+w}{ }\PYG{o}{\PYGZgt{}\PYGZgt{}}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{i}\PYG{+w}{ }\PYG{o}{*}\PYG{+w}{ }\PYG{l+m+mi}{8}\PYG{p}{);}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{n}{buffer}\PYG{p}{[}\PYG{l+m+mi}{12}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{o}{::}\PYG{n}{Marker}\PYG{o}{::}\PYG{n}{PRMEND}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{o}{::}\PYG{n}{Marker}\PYG{o}{::}\PYG{n}{JMAX}\PYG{p}{;}

\PYG{+w}{	}\PYG{n}{Write}\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{13}\PYG{p}{);}

\PYG{+w}{	}\PYG{k}{return}\PYG{+w}{ }\PYG{n}{Read}\PYG{p}{()}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{o}{::}\PYG{n}{Status}\PYG{o}{::}\PYG{n}{OK}\PYG{p}{;}\PYG{+w}{ }\PYG{c+c1}{// Success if an OK byte is received}
\PYG{p}{\PYGZcb{}}

\PYG{n}{std}\PYG{o}{::}\PYG{n}{pair}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{int}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{o}{\PYGZgt{}}\PYG{+w}{ }\PYG{n}{PipeManager}\PYG{o}{::}\PYG{n}{Handshake}\PYG{p}{()}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{n}{BYTE}\PYG{+w}{ }\PYG{n}{receivedByte}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{Read}\PYG{p}{();}

\PYG{+w}{	}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{receivedByte}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{o}{::}\PYG{n}{Status}\PYG{o}{::}\PYG{n}{HELLO}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{k}{return}\PYG{+w}{ }\PYG{n}{std}\PYG{o}{::}\PYG{n}{pair}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{int}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{o}{\PYGZgt{}}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{);}\PYG{+w}{ }\PYG{p}{\PYGZcb{}}\PYG{+w}{ }\PYG{c+c1}{// We need a HELLO byte, (0,0) is the error case}

\PYG{+w}{	}\PYG{n}{BYTE}\PYG{+w}{ }\PYG{n}{buffer}\PYG{p}{[}\PYG{l+m+mi}{13}\PYG{p}{];}
\PYG{+w}{	}\PYG{n}{Read}\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{12}\PYG{p}{);}

\PYG{+w}{	}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{PipeConstants}\PYG{o}{::}\PYG{n}{Marker}\PYG{o}{::}\PYG{n}{PRMSTART}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{o}{::}\PYG{n}{Marker}\PYG{o}{::}\PYG{n}{IMAX}\PYG{p}{))}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{k}{return}\PYG{+w}{ }\PYG{n}{std}\PYG{o}{::}\PYG{n}{pair}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{int}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{o}{\PYGZgt{}}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{);}\PYG{+w}{ }\PYG{p}{\PYGZcb{}}\PYG{+w}{ }\PYG{c+c1}{// Should start with PRMSTART}
\PYG{+w}{	}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{iMax}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{o}{*}\PYG{k}{reinterpret\PYGZus{}cast}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{int}\PYG{o}{*\PYGZgt{}}\PYG{p}{(}\PYG{n}{buffer}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{l+m+mi}{2}\PYG{p}{);}
\PYG{+w}{	}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{[}\PYG{l+m+mi}{6}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{PipeConstants}\PYG{o}{::}\PYG{n}{Marker}\PYG{o}{::}\PYG{n}{PRMEND}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{o}{::}\PYG{n}{Marker}\PYG{o}{::}\PYG{n}{IMAX}\PYG{p}{))}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{k}{return}\PYG{+w}{ }\PYG{n}{std}\PYG{o}{::}\PYG{n}{pair}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{int}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{o}{\PYGZgt{}}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{);}\PYG{+w}{ }\PYG{p}{\PYGZcb{}}\PYG{+w}{ }\PYG{c+c1}{// Should end with PRMEND}

\PYG{+w}{	}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{[}\PYG{l+m+mi}{7}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{PipeConstants}\PYG{o}{::}\PYG{n}{Marker}\PYG{o}{::}\PYG{n}{PRMSTART}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{o}{::}\PYG{n}{Marker}\PYG{o}{::}\PYG{n}{JMAX}\PYG{p}{))}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{k}{return}\PYG{+w}{ }\PYG{n}{std}\PYG{o}{::}\PYG{n}{pair}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{int}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{o}{\PYGZgt{}}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{);}\PYG{+w}{ }\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{jMax}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{o}{*}\PYG{k}{reinterpret\PYGZus{}cast}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{int}\PYG{o}{*\PYGZgt{}}\PYG{p}{(}\PYG{n}{buffer}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{l+m+mi}{8}\PYG{p}{);}
\PYG{+w}{	}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{[}\PYG{l+m+mi}{12}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{PipeConstants}\PYG{o}{::}\PYG{n}{Marker}\PYG{o}{::}\PYG{n}{PRMEND}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{o}{::}\PYG{n}{Marker}\PYG{o}{::}\PYG{n}{JMAX}\PYG{p}{))}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{k}{return}\PYG{+w}{ }\PYG{n}{std}\PYG{o}{::}\PYG{n}{pair}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{int}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{o}{\PYGZgt{}}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{);}\PYG{+w}{ }\PYG{p}{\PYGZcb{}}

\PYG{+w}{	}\PYG{n}{Write}\PYG{p}{(}\PYG{n}{PipeConstants}\PYG{o}{::}\PYG{n}{Status}\PYG{o}{::}\PYG{n}{OK}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// Send an OK byte to show the transmission was successful}

\PYG{+w}{	}\PYG{k}{return}\PYG{+w}{ }\PYG{n}{std}\PYG{o}{::}\PYG{n}{pair}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{int}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{o}{\PYGZgt{}}\PYG{p}{(}\PYG{n}{iMax}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{jMax}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{bool}\PYG{+w}{ }\PYG{n}{PipeManager}\PYG{o}{::}\PYG{n}{ReceiveObstacles}\PYG{p}{(}\PYG{k+kt}{bool}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{obstacles}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{xLength}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{yLength}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{fieldLength}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{xLength}\PYG{+w}{ }\PYG{o}{*}\PYG{+w}{ }\PYG{n}{yLength}\PYG{p}{;}
\PYG{+w}{	}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{bufferLength}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{fieldLength}\PYG{+w}{ }\PYG{o}{/}\PYG{+w}{ }\PYG{l+m+mi}{8}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{fieldLength}\PYG{+w}{ }\PYG{o}{\PYGZpc{}}\PYG{+w}{ }\PYG{l+m+mi}{8}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{+w}{ }\PYG{o}{?}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{+w}{ }\PYG{o}{:}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{);}

\PYG{+w}{	}\PYG{c+c1}{//Assume there has been a FLDSTART before}
\PYG{+w}{	}\PYG{n}{BYTE}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{buffer}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{new}\PYG{+w}{ }\PYG{n}{BYTE}\PYG{p}{[}\PYG{n}{bufferLength}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{];}\PYG{+w}{ }\PYG{c+c1}{// Have to use new keyword because length of array is not a constant expression}

\PYG{+w}{	}\PYG{n}{Read}\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{bufferLength}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{);}

\PYG{+w}{	}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{byteNumber}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{;}
\PYG{+w}{	}\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{i}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{;}\PYG{+w}{ }\PYG{n}{i}\PYG{+w}{ }\PYG{o}{\PYGZlt{}}\PYG{+w}{ }\PYG{n}{fieldLength}\PYG{p}{;}\PYG{+w}{ }\PYG{n}{i}\PYG{o}{++}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{		}\PYG{n}{obstacles}\PYG{p}{[}\PYG{n}{byteNumber}\PYG{+w}{ }\PYG{o}{*}\PYG{+w}{ }\PYG{l+m+mi}{8}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{i}\PYG{+w}{ }\PYG{o}{\PYGZpc{}}\PYG{+w}{ }\PYG{l+m+mi}{8}\PYG{p}{)]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{p}{(((}\PYG{n}{buffer}\PYG{p}{[}\PYG{n}{byteNumber}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{\PYGZgt{}\PYGZgt{}}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{i}\PYG{+w}{ }\PYG{o}{\PYGZpc{}}\PYG{+w}{ }\PYG{l+m+mi}{8}\PYG{p}{))}\PYG{+w}{ }\PYG{o}{\PYGZam{}}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{)}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{)}\PYG{+w}{ }\PYG{o}{?}\PYG{+w}{ }\PYG{n+nb}{false}\PYG{+w}{ }\PYG{o}{:}\PYG{+w}{ }\PYG{n+nb}{true}\PYG{p}{;}\PYG{+w}{ }\PYG{c+c1}{// Due to the way bits are shifted into the bytes by the server, they must be shifted off in the opposite order hence the complicated expression for obstacles[...]. Right shift and AND with 1 takes that bit only}

\PYG{+w}{		}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{i}\PYG{+w}{ }\PYG{o}{\PYGZpc{}}\PYG{+w}{ }\PYG{l+m+mi}{8}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{l+m+mi}{7}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{			}\PYG{n}{byteNumber}\PYG{o}{++}\PYG{p}{;}
\PYG{+w}{		}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}

\PYG{+w}{	}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{[}\PYG{n}{bufferLength}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{PipeConstants}\PYG{o}{::}\PYG{n}{Marker}\PYG{o}{::}\PYG{n}{FLDEND}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{o}{::}\PYG{n}{Marker}\PYG{o}{::}\PYG{n}{OBST}\PYG{p}{))}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{c+c1}{// Ensure there is a FLDEND after}
\PYG{+w}{		}\PYG{n}{std}\PYG{o}{::}\PYG{n}{cerr}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}Cannot read obstacles \PYGZhy{} server sent malformed data. \PYGZdq{}}\PYG{p}{;}
\PYG{+w}{		}\PYG{n}{Write}\PYG{p}{(}\PYG{n}{PipeConstants}\PYG{o}{::}\PYG{n}{Error}\PYG{o}{::}\PYG{n}{BADPARAM}\PYG{p}{);}
\PYG{+w}{		}\PYG{k}{return}\PYG{+w}{ }\PYG{n+nb}{false}\PYG{p}{;}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{k}{delete}\PYG{p}{[]}\PYG{+w}{ }\PYG{n}{buffer}\PYG{p}{;}

\PYG{+w}{	}\PYG{n}{Write}\PYG{p}{(}\PYG{n}{PipeConstants}\PYG{o}{::}\PYG{n}{Status}\PYG{o}{::}\PYG{n}{OK}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// Send an OK message to server to tell it the data was understood}
\PYG{+w}{	}\PYG{k}{return}\PYG{+w}{ }\PYG{n+nb}{true}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{n}{BYTE}\PYG{+w}{ }\PYG{n}{PipeManager}\PYG{o}{::}\PYG{n}{ReadByte}\PYG{p}{()}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{k}{return}\PYG{+w}{ }\PYG{n}{Read}\PYG{p}{();}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n}{PipeManager}\PYG{o}{::}\PYG{n}{SendByte}\PYG{p}{(}\PYG{n}{BYTE}\PYG{+w}{ }\PYG{n}{byte}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{n}{Write}\PYG{p}{(}\PYG{n}{byte}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}

\PYG{n}{REAL}\PYG{+w}{ }\PYG{n}{PipeManager}\PYG{o}{::}\PYG{n}{ReadReal}\PYG{p}{()}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{n}{BYTE}\PYG{+w}{ }\PYG{n}{buffer}\PYG{p}{[}\PYG{k}{sizeof}\PYG{p}{(}\PYG{n}{REAL}\PYG{p}{)];}
\PYG{+w}{	}\PYG{n}{Read}\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{k}{sizeof}\PYG{p}{(}\PYG{n}{REAL}\PYG{p}{));}
\PYG{+w}{	}\PYG{n}{REAL}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{pOutput}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{reinterpret\PYGZus{}cast}\PYG{o}{\PYGZlt{}}\PYG{n}{REAL}\PYG{o}{*\PYGZgt{}}\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{);}
\PYG{+w}{	}\PYG{k}{return}\PYG{+w}{ }\PYG{o}{*}\PYG{n}{pOutput}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{PipeManager}\PYG{o}{::}\PYG{n}{ReadInt}\PYG{p}{()}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{n}{BYTE}\PYG{+w}{ }\PYG{n}{buffer}\PYG{p}{[}\PYG{k}{sizeof}\PYG{p}{(}\PYG{k+kt}{int}\PYG{p}{)];}
\PYG{+w}{	}\PYG{n}{Read}\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{k}{sizeof}\PYG{p}{(}\PYG{k+kt}{int}\PYG{p}{));}
\PYG{+w}{	}\PYG{k+kt}{int}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{pOutput}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{reinterpret\PYGZus{}cast}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{int}\PYG{o}{*\PYGZgt{}}\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{);}
\PYG{+w}{	}\PYG{k}{return}\PYG{+w}{ }\PYG{o}{*}\PYG{n}{pOutput}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n}{PipeManager}\PYG{o}{::}\PYG{n}{SendField}\PYG{p}{(}\PYG{n}{REAL}\PYG{o}{**}\PYG{+w}{ }\PYG{n}{field}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{xLength}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{yLength}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{xOffset}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{yOffset}\PYG{p}{)}
\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{n}{BYTE}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{buffer}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{new}\PYG{+w}{ }\PYG{n}{BYTE}\PYG{p}{[}\PYG{n}{xLength}\PYG{+w}{ }\PYG{o}{*}\PYG{+w}{ }\PYG{n}{yLength}\PYG{+w}{ }\PYG{o}{*}\PYG{+w}{ }\PYG{k}{sizeof}\PYG{p}{(}\PYG{n}{REAL}\PYG{p}{)];}

\PYG{+w}{	}\PYG{n}{SerialiseField}\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{field}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{xLength}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{yLength}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{xOffset}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{yOffset}\PYG{p}{);}

\PYG{+w}{	}\PYG{n}{Write}\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{xLength}\PYG{+w}{ }\PYG{o}{*}\PYG{+w}{ }\PYG{n}{yLength}\PYG{+w}{ }\PYG{o}{*}\PYG{+w}{ }\PYG{k}{sizeof}\PYG{p}{(}\PYG{n}{REAL}\PYG{p}{));}

\PYG{+w}{	}\PYG{k}{delete}\PYG{p}{[]}\PYG{+w}{ }\PYG{n}{buffer}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n}{PipeManager}\PYG{o}{::}\PYG{n}{SendField}\PYG{p}{(}\PYG{n}{REAL}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{field}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{numElements}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{n}{Write}\PYG{p}{(}\PYG{k}{reinterpret\PYGZus{}cast}\PYG{o}{\PYGZlt{}}\PYG{n}{BYTE}\PYG{o}{*\PYGZgt{}}\PYG{p}{(}\PYG{n}{field}\PYG{p}{),}\PYG{+w}{ }\PYG{n}{numElements}\PYG{+w}{ }\PYG{o}{*}\PYG{+w}{ }\PYG{k}{sizeof}\PYG{p}{(}\PYG{n}{REAL}\PYG{p}{));}
\PYG{p}{\PYGZcb{}}
\PYG{c+cp}{\PYGZsh{}pragma endregion}
\end{Verbatim}

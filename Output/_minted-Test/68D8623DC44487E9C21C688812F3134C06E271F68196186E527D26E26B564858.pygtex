\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k}{using}\PYG{+w}{ }\PYG{n+nn}{System}\PYG{p}{;}
\PYG{k}{using}\PYG{+w}{ }\PYG{n+nn}{System.Globalization}\PYG{p}{;}
\PYG{k}{using}\PYG{+w}{ }\PYG{n+nn}{System.Linq}\PYG{p}{;}
\PYG{k}{using}\PYG{+w}{ }\PYG{n+nn}{System.Windows}\PYG{p}{;}
\PYG{k}{using}\PYG{+w}{ }\PYG{n+nn}{System.Windows.Data}\PYG{p}{;}

\PYG{k}{namespace}\PYG{+w}{ }\PYG{n+nn}{UserInterface.Converters}
\PYG{p}{\PYGZob{}}
\PYG{+w}{    }\PYG{n+na}{[ValueConversion(typeof(double), typeof(double))]}
\PYG{+w}{    }\PYG{k}{public}\PYG{+w}{ }\PYG{k}{abstract}\PYG{+w}{ }\PYG{k}{class}\PYG{+w}{ }\PYG{n+nc}{CoordinateDifference}\PYG{+w}{ }\PYG{p}{:}\PYG{+w}{ }\PYG{n}{IValueConverter}
\PYG{+w}{    }\PYG{p}{\PYGZob{}}
\PYG{+w}{        }\PYG{k}{protected}\PYG{+w}{ }\PYG{k}{readonly}\PYG{+w}{ }\PYG{n}{VisualisationCoordinate}\PYG{+w}{ }\PYG{n}{VisualisationCoordinateConverter}\PYG{p}{;}

\PYG{+w}{        }\PYG{k}{protected}\PYG{+w}{ }\PYG{k}{abstract}\PYG{+w}{ }\PYG{k+kt}{double}\PYG{+w}{ }\PYG{n+nf}{FindLength}\PYG{p}{(}\PYG{k+kt}{double}\PYG{+w}{ }\PYG{n}{start}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{double}\PYG{+w}{ }\PYG{n}{end}\PYG{p}{);}

\PYG{+w}{        }\PYG{k}{public}\PYG{+w}{ }\PYG{k+kt}{object}\PYG{+w}{ }\PYG{n+nf}{Convert}\PYG{p}{(}\PYG{k+kt}{object}\PYG{+w}{ }\PYG{k}{value}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{Type}\PYG{+w}{ }\PYG{n}{targetType}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{object}\PYG{+w}{ }\PYG{n}{parameter}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{CultureInfo}\PYG{+w}{ }\PYG{n}{culture}\PYG{p}{)}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}
\PYG{+w}{            }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{k}{value}\PYG{+w}{ }\PYG{k}{is}\PYG{+w}{ }\PYG{n}{not}\PYG{+w}{ }\PYG{k+kt}{double}\PYG{+w}{ }\PYG{o}{||}\PYG{+w}{ }\PYG{n}{parameter}\PYG{+w}{ }\PYG{k}{is}\PYG{+w}{ }\PYG{n}{not}\PYG{+w}{ }\PYG{k+kt}{string}\PYG{+w}{ }\PYG{o}{||}\PYG{+w}{ }\PYG{o}{!}\PYG{p}{((}\PYG{k+kt}{string}\PYG{p}{)}\PYG{n}{parameter}\PYG{p}{).}\PYG{n}{Contains}\PYG{p}{(}\PYG{l+s+sc}{\PYGZsq{},\PYGZsq{}}\PYG{p}{))}
\PYG{+w}{            }\PYG{p}{\PYGZob{}}
\PYG{+w}{                }\PYG{k}{return}\PYG{+w}{ }\PYG{n}{DependencyProperty}\PYG{p}{.}\PYG{n}{UnsetValue}\PYG{p}{;}
\PYG{+w}{            }\PYG{p}{\PYGZcb{}}

\PYG{+w}{            }\PYG{k+kt}{string}\PYG{+w}{ }\PYG{n}{parameterNoSpaces}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{new}\PYG{p}{(((}\PYG{k+kt}{string}\PYG{p}{)}\PYG{n}{parameter}\PYG{p}{).}\PYG{n}{ToCharArray}\PYG{p}{().}\PYG{n}{Where}\PYG{p}{(}\PYG{n}{c}\PYG{+w}{ }\PYG{o}{=\PYGZgt{}}\PYG{+w}{ }\PYG{o}{!}\PYG{k+kt}{char}\PYG{p}{.}\PYG{n}{IsWhiteSpace}\PYG{p}{(}\PYG{n}{c}\PYG{p}{)).}\PYG{n}{ToArray}\PYG{p}{());}
\PYG{+w}{            }\PYG{k+kt}{string}\PYG{p}{[]}\PYG{+w}{ }\PYG{n}{parameters}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{parameterNoSpaces}\PYG{p}{.}\PYG{n}{Split}\PYG{p}{(}\PYG{l+s+sc}{\PYGZsq{},\PYGZsq{}}\PYG{p}{);}

\PYG{+w}{            }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{o}{!}\PYG{k+kt}{double}\PYG{p}{.}\PYG{n}{TryParse}\PYG{p}{(}\PYG{n}{parameters}\PYG{p}{[}\PYG{l+m}{0}\PYG{p}{],}\PYG{+w}{ }\PYG{k}{out}\PYG{+w}{ }\PYG{k+kt}{double}\PYG{+w}{ }\PYG{n}{elementStartCoord}\PYG{p}{)}\PYG{+w}{ }\PYG{o}{||}\PYG{+w}{ }\PYG{o}{!}\PYG{k+kt}{double}\PYG{p}{.}\PYG{n}{TryParse}\PYG{p}{(}\PYG{n}{parameters}\PYG{p}{[}\PYG{l+m}{1}\PYG{p}{],}\PYG{+w}{ }\PYG{k}{out}\PYG{+w}{ }\PYG{k+kt}{double}\PYG{+w}{ }\PYG{n}{elementEndCoord}\PYG{p}{))}
\PYG{+w}{            }\PYG{p}{\PYGZob{}}
\PYG{+w}{                }\PYG{k}{return}\PYG{+w}{ }\PYG{n}{DependencyProperty}\PYG{p}{.}\PYG{n}{UnsetValue}\PYG{p}{;}
\PYG{+w}{            }\PYG{p}{\PYGZcb{}}

\PYG{+w}{            }\PYG{k+kt}{double}\PYG{+w}{ }\PYG{n}{elementLength}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{FindLength}\PYG{p}{(}\PYG{n}{elementStartCoord}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{elementEndCoord}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// Use formula to get relative length of element}
\PYG{+w}{            }\PYG{k}{return}\PYG{+w}{ }\PYG{n}{VisualisationCoordinateConverter}\PYG{p}{.}\PYG{n}{Convert}\PYG{p}{(}\PYG{k}{value}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{targetType}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{elementLength}\PYG{p}{.}\PYG{n}{ToString}\PYG{p}{(),}\PYG{+w}{ }\PYG{n}{culture}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// Convert this to actual coordinates}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}

\PYG{+w}{        }\PYG{k}{public}\PYG{+w}{ }\PYG{k+kt}{object}\PYG{+w}{ }\PYG{n+nf}{ConvertBack}\PYG{p}{(}\PYG{k+kt}{object}\PYG{+w}{ }\PYG{k}{value}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{Type}\PYG{+w}{ }\PYG{n}{targetType}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{object}\PYG{+w}{ }\PYG{n}{parameter}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{CultureInfo}\PYG{+w}{ }\PYG{n}{culture}\PYG{p}{)}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}
\PYG{+w}{            }\PYG{k}{throw}\PYG{+w}{ }\PYG{k}{new}\PYG{+w}{ }\PYG{n+nf}{InvalidOperationException}\PYG{p}{();}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}

\PYG{+w}{        }\PYG{k}{public}\PYG{+w}{ }\PYG{n+nf}{CoordinateDifference}\PYG{p}{(}\PYG{n}{VisualisationCoordinate}\PYG{+w}{ }\PYG{n}{VisualisationCoordinateConverter}\PYG{p}{)}\PYG{+w}{ }\PYG{c+c1}{// Derived classes will need to instantiate VisualisationCoordinateConverter in their constructors.}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}
\PYG{+w}{            }\PYG{k}{this}\PYG{p}{.}\PYG{n}{VisualisationCoordinateConverter}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{VisualisationCoordinateConverter}\PYG{p}{;}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}
\PYG{+w}{    }\PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}

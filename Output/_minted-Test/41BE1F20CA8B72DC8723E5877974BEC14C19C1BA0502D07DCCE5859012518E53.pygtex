\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k}{using}\PYG{+w}{ }\PYG{n+nn}{System}\PYG{p}{;}
\PYG{k}{using}\PYG{+w}{ }\PYG{n+nn}{System.Diagnostics}\PYG{p}{;}
\PYG{k}{using}\PYG{+w}{ }\PYG{n+nn}{System.IO.Pipes}\PYG{p}{;}
\PYG{k}{using}\PYG{+w}{ }\PYG{n+nn}{System.Threading.Tasks}\PYG{p}{;}

\PYG{k}{namespace}\PYG{+w}{ }\PYG{n+nn}{UserInterface.HelperClasses}
\PYG{p}{\PYGZob{}}
\PYG{+w}{    }\PYG{c+c1}{/// \PYGZlt{}summary\PYGZgt{}}
\PYG{+w}{    }\PYG{c+c1}{/// Struct enclosing a bool, specifying whether a read operation happened, and a buffer for the read operation output (if applicable)}
\PYG{+w}{    }\PYG{c+c1}{/// \PYGZlt{}/summary\PYGZgt{}}
\PYG{+w}{    }\PYG{k}{public}\PYG{+w}{ }\PYG{k}{struct}\PYG{+w}{ }\PYG{n+nc}{ReadResults}
\PYG{+w}{    }\PYG{p}{\PYGZob{}}
\PYG{+w}{        }\PYG{k}{public}\PYG{+w}{ }\PYG{k+kt}{bool}\PYG{+w}{ }\PYG{n}{anythingRead}\PYG{p}{;}
\PYG{+w}{        }\PYG{k}{public}\PYG{+w}{ }\PYG{k+kt}{byte}\PYG{p}{[]}\PYG{+w}{ }\PYG{n}{data}\PYG{p}{;}
\PYG{+w}{    }\PYG{p}{\PYGZcb{}}

\PYG{+w}{    }\PYG{k}{public}\PYG{+w}{ }\PYG{k}{enum}\PYG{+w}{ }\PYG{n}{FieldType}
\PYG{+w}{    }\PYG{p}{\PYGZob{}}
\PYG{+w}{        }\PYG{n}{HorizontalVelocity}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m}{1}\PYG{p}{,}
\PYG{+w}{        }\PYG{n}{VerticalVelocity}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m}{2}\PYG{p}{,}
\PYG{+w}{        }\PYG{n}{Pressure}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m}{3}\PYG{p}{,}
\PYG{+w}{        }\PYG{n}{StreamFunction}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m}{4}
\PYG{+w}{    }\PYG{p}{\PYGZcb{}}

\PYG{+w}{    }\PYG{c+c1}{/// \PYGZlt{}summary\PYGZgt{}}
\PYG{+w}{    }\PYG{c+c1}{/// Helper class for managing the pipe communication with the C++ backend}
\PYG{+w}{    }\PYG{c+c1}{/// \PYGZlt{}/summary\PYGZgt{}}
\PYG{+w}{    }\PYG{k}{public}\PYG{+w}{ }\PYG{k}{class}\PYG{+w}{ }\PYG{n+nc}{PipeManager}
\PYG{+w}{    }\PYG{p}{\PYGZob{}}
\PYG{+w}{        }\PYG{k}{private}\PYG{+w}{ }\PYG{n}{NamedPipeServerStream}\PYG{+w}{ }\PYG{n}{pipeStream}\PYG{p}{;}

\PYG{+w}{        }\PYG{k}{public}\PYG{+w}{ }\PYG{n+nf}{PipeManager}\PYG{p}{(}\PYG{k+kt}{string}\PYG{+w}{ }\PYG{n}{pipeName}\PYG{p}{)}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}
\PYG{+w}{            }\PYG{n}{pipeStream}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{new}\PYG{+w}{ }\PYG{n}{NamedPipeServerStream}\PYG{p}{(}\PYG{n}{pipeName}\PYG{p}{);}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}

\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}summary\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// Serialises an integer into part of a buffer.}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}/summary\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}param name=\PYGZdq{}buffer\PYGZdq{}\PYGZgt{}The \PYGZlt{}c\PYGZgt{}byte[] to store the result in.\PYGZlt{}/c\PYGZgt{}\PYGZlt{}/param\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}param name=\PYGZdq{}offset\PYGZdq{}\PYGZgt{}The index in which to store the first element.\PYGZlt{}/param\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}param name=\PYGZdq{}datum\PYGZdq{}\PYGZgt{}The datum to store.\PYGZlt{}/param\PYGZgt{}}
\PYG{+w}{        }\PYG{k}{private}\PYG{+w}{ }\PYG{k}{static}\PYG{+w}{ }\PYG{k}{void}\PYG{+w}{ }\PYG{n+nf}{SerialisePrimitive}\PYG{p}{(}\PYG{k+kt}{byte}\PYG{p}{[]}\PYG{+w}{ }\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{offset}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{datum}\PYG{p}{)}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}
\PYG{+w}{            }\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{i}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m}{0}\PYG{p}{;}\PYG{+w}{ }\PYG{n}{i}\PYG{+w}{ }\PYG{o}{\PYGZlt{}}\PYG{+w}{ }\PYG{k}{sizeof}\PYG{p}{(}\PYG{k+kt}{int}\PYG{p}{);}\PYG{+w}{ }\PYG{n}{i}\PYG{o}{++}\PYG{p}{)}
\PYG{+w}{            }\PYG{p}{\PYGZob{}}
\PYG{+w}{                }\PYG{n}{buffer}\PYG{p}{[}\PYG{n}{i}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{n}{offset}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{byte}\PYG{p}{)(}\PYG{n}{datum}\PYG{+w}{ }\PYG{o}{\PYGZgt{}\PYGZgt{}}\PYG{+w}{ }\PYG{n}{i}\PYG{+w}{ }\PYG{o}{*}\PYG{+w}{ }\PYG{l+m}{8}\PYG{p}{);}
\PYG{+w}{            }\PYG{p}{\PYGZcb{}}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}

\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}summary\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// Serialises a float into part of a buffer.}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}/summary\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}param name=\PYGZdq{}buffer\PYGZdq{}\PYGZgt{}The \PYGZlt{}c\PYGZgt{}byte[] to store the result in.\PYGZlt{}/c\PYGZgt{}\PYGZlt{}/param\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}param name=\PYGZdq{}offset\PYGZdq{}\PYGZgt{}The index in which to store the first element.\PYGZlt{}/param\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}param name=\PYGZdq{}datum\PYGZdq{}\PYGZgt{}The datum to store.\PYGZlt{}/param\PYGZgt{}}
\PYG{+w}{        }\PYG{k}{private}\PYG{+w}{ }\PYG{k}{static}\PYG{+w}{ }\PYG{k}{void}\PYG{+w}{ }\PYG{n+nf}{SerialisePrimitive}\PYG{p}{(}\PYG{k+kt}{byte}\PYG{p}{[]}\PYG{+w}{ }\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{offset}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{float}\PYG{+w}{ }\PYG{n}{datum}\PYG{p}{)}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}
\PYG{+w}{            }\PYG{k+kt}{byte}\PYG{p}{[]}\PYG{+w}{ }\PYG{n}{serialisedPrimitive}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{BitConverter}\PYG{p}{.}\PYG{n}{GetBytes}\PYG{p}{(}\PYG{n}{datum}\PYG{p}{);}
\PYG{+w}{            }\PYG{n}{Buffer}\PYG{p}{.}\PYG{n}{BlockCopy}\PYG{p}{(}\PYG{n}{serialisedPrimitive}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{offset}\PYG{p}{,}\PYG{+w}{ }\PYG{k}{sizeof}\PYG{p}{(}\PYG{k+kt}{float}\PYG{p}{));}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}

\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}summary\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// Reads one byte asynchronously}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}/summary\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}returns\PYGZgt{}A task to read the byte from the pipe, when one is available\PYGZlt{}/returns\PYGZgt{}}
\PYG{+w}{        }\PYG{k}{public}\PYG{+w}{ }\PYG{n}{Task}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{byte}\PYG{o}{\PYGZgt{}}\PYG{+w}{ }\PYG{n}{ReadAsync}\PYG{p}{()}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}
\PYG{+w}{            }\PYG{n}{TaskCompletionSource}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{byte}\PYG{o}{\PYGZgt{}}\PYG{+w}{ }\PYG{n}{taskCompletionSource}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{new}\PYG{+w}{ }\PYG{n}{TaskCompletionSource}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{byte}\PYG{o}{\PYGZgt{}}\PYG{p}{();}

\PYG{+w}{            }\PYG{k+kt}{byte}\PYG{p}{[]}\PYG{+w}{ }\PYG{n}{buffer}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{new}\PYG{+w}{ }\PYG{k+kt}{byte}\PYG{p}{[}\PYG{l+m}{1}\PYG{p}{];}
\PYG{+w}{            }\PYG{n}{pipeStream}\PYG{p}{.}\PYG{n}{Read}\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m}{1}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{//Read one byte. ReadByte method is not used because that returns \PYGZhy{}1 if there is nothing to read, whereas we want to wait until there is data available which Read does}

\PYG{+w}{            }\PYG{n}{taskCompletionSource}\PYG{p}{.}\PYG{n}{SetResult}\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{[}\PYG{l+m}{0}\PYG{p}{]);}
\PYG{+w}{            }\PYG{k}{return}\PYG{+w}{ }\PYG{n}{taskCompletionSource}\PYG{p}{.}\PYG{n}{Task}\PYG{p}{;}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}

\PYG{+w}{        }\PYG{k}{public}\PYG{+w}{ }\PYG{n}{Task}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{bool}\PYG{o}{\PYGZgt{}}\PYG{+w}{ }\PYG{n}{ReadAsync}\PYG{p}{(}\PYG{k+kt}{byte}\PYG{p}{[]}\PYG{+w}{ }\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{count}\PYG{p}{)}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}
\PYG{+w}{            }\PYG{n}{TaskCompletionSource}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{bool}\PYG{o}{\PYGZgt{}}\PYG{+w}{ }\PYG{n}{taskCompletionSource}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{new}\PYG{+w}{ }\PYG{n}{TaskCompletionSource}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{bool}\PYG{o}{\PYGZgt{}}\PYG{p}{();}
\PYG{+w}{            }\PYG{n}{pipeStream}\PYG{p}{.}\PYG{n}{Read}\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{count}\PYG{p}{);}
\PYG{+w}{            }\PYG{n}{taskCompletionSource}\PYG{p}{.}\PYG{n}{SetResult}\PYG{p}{(}\PYG{k}{true}\PYG{p}{);}
\PYG{+w}{            }\PYG{k}{return}\PYG{+w}{ }\PYG{n}{taskCompletionSource}\PYG{p}{.}\PYG{n}{Task}\PYG{p}{;}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}

\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}summary\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// Attempts a read operation of the pipe stream}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}/summary\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}returns\PYGZgt{}A ReadResults struct, including whether any data was read and the data (if applicable)\PYGZlt{}/returns\PYGZgt{}}
\PYG{+w}{        }\PYG{k}{public}\PYG{+w}{ }\PYG{n}{ReadResults}\PYG{+w}{ }\PYG{n+nf}{AttemptRead}\PYG{p}{()}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}
\PYG{+w}{            }\PYG{k+kt}{byte}\PYG{p}{[]}\PYG{+w}{ }\PYG{n}{buffer}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{new}\PYG{+w}{ }\PYG{k+kt}{byte}\PYG{p}{[}\PYG{l+m}{1024}\PYG{p}{];}\PYG{+w}{ }\PYG{c+c1}{// Start by reading 1kiB of the pipe}
\PYG{+w}{            }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{bytesRead}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{pipeStream}\PYG{p}{.}\PYG{n}{Read}\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{buffer}\PYG{p}{.}\PYG{n}{Length}\PYG{p}{);}
\PYG{+w}{            }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{bytesRead}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{l+m}{0}\PYG{p}{)}
\PYG{+w}{            }\PYG{p}{\PYGZob{}}
\PYG{+w}{                }\PYG{k}{return}\PYG{+w}{ }\PYG{k}{new}\PYG{+w}{ }\PYG{n}{ReadResults}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{n}{anythingRead}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{false}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{data}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{new}\PYG{+w}{ }\PYG{k+kt}{byte}\PYG{p}{[}\PYG{l+m}{1}\PYG{p}{]}\PYG{+w}{ }\PYG{p}{\PYGZcb{};}
\PYG{+w}{            }\PYG{p}{\PYGZcb{}}
\PYG{+w}{            }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{offset}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m}{1}\PYG{p}{;}
\PYG{+w}{            }\PYG{k}{while}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{bytesRead}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{l+m}{1024}\PYG{p}{)}\PYG{+w}{ }\PYG{c+c1}{// While the buffer gets filled}
\PYG{+w}{            }\PYG{p}{\PYGZob{}}
\PYG{+w}{                }\PYG{n}{Array}\PYG{p}{.}\PYG{n}{Resize}\PYG{p}{(}\PYG{k}{ref}\PYG{+w}{ }\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m}{1024}\PYG{+w}{ }\PYG{o}{*}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{offset}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{l+m}{1}\PYG{p}{));}\PYG{+w}{ }\PYG{c+c1}{// Resize the buffer by 1kiB}
\PYG{+w}{                }\PYG{n}{bytesRead}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{pipeStream}\PYG{p}{.}\PYG{n}{Read}\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{offset}\PYG{+w}{ }\PYG{o}{*}\PYG{+w}{ }\PYG{l+m}{1024}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m}{1024}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// Read the next 1k bytes}
\PYG{+w}{                }\PYG{n}{offset}\PYG{o}{++}\PYG{p}{;}
\PYG{+w}{            }\PYG{p}{\PYGZcb{}}
\PYG{+w}{            }\PYG{n}{Array}\PYG{p}{.}\PYG{n}{Resize}\PYG{p}{(}\PYG{k}{ref}\PYG{+w}{ }\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{offset}\PYG{+w}{ }\PYG{o}{\PYGZhy{}}\PYG{+w}{ }\PYG{l+m}{1}\PYG{p}{)}\PYG{+w}{ }\PYG{o}{*}\PYG{+w}{ }\PYG{l+m}{1024}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{n}{bytesRead}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// Resize the buffer to the actual length of data}
\PYG{+w}{            }\PYG{k}{return}\PYG{+w}{ }\PYG{k}{new}\PYG{+w}{ }\PYG{n}{ReadResults}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{n}{anythingRead}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{true}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{data}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{buffer}\PYG{+w}{ }\PYG{p}{\PYGZcb{};}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}

\PYG{+w}{        }\PYG{k}{public}\PYG{+w}{ }\PYG{k}{async}\PYG{+w}{ }\PYG{n}{Task}\PYG{o}{\PYGZlt{}}\PYG{n}{ReadResults}\PYG{o}{\PYGZgt{}}\PYG{+w}{ }\PYG{n}{ReadFieldAsync}\PYG{p}{(}\PYG{n}{FieldType}\PYG{+w}{ }\PYG{n}{field}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{fieldLength}\PYG{p}{)}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}
\PYG{+w}{            }\PYG{n}{ReadResults}\PYG{+w}{ }\PYG{n}{readResults}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{new}\PYG{+w}{ }\PYG{n}{ReadResults}\PYG{p}{();}
\PYG{+w}{            }\PYG{k+kt}{byte}\PYG{p}{[]}\PYG{+w}{ }\PYG{n}{buffer}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{new}\PYG{+w}{ }\PYG{k+kt}{byte}\PYG{p}{[}\PYG{n}{fieldLength}\PYG{p}{];}
\PYG{+w}{            }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{k}{await}\PYG{+w}{ }\PYG{n}{ReadAsync}\PYG{p}{()}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Marker}\PYG{p}{.}\PYG{n}{GENERIC}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{byte}\PYG{p}{)}\PYG{n}{field}\PYG{p}{))}\PYG{+w}{ }\PYG{c+c1}{// If the received byte is not a marker with the correct field}
\PYG{+w}{            }\PYG{p}{\PYGZob{}}
\PYG{+w}{                }\PYG{n}{readResults}\PYG{p}{.}\PYG{n}{anythingRead}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{false}\PYG{p}{;}
\PYG{+w}{                }\PYG{k}{return}\PYG{+w}{ }\PYG{n}{readResults}\PYG{p}{;}
\PYG{+w}{            }\PYG{p}{\PYGZcb{}}

\PYG{+w}{            }\PYG{n}{pipeStream}\PYG{p}{.}\PYG{n}{Read}\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{fieldLength}\PYG{p}{);}
\PYG{+w}{            }\PYG{n}{readResults}\PYG{p}{.}\PYG{n}{anythingRead}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{true}\PYG{p}{;}
\PYG{+w}{            }\PYG{n}{readResults}\PYG{p}{.}\PYG{n}{data}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{buffer}\PYG{p}{;}

\PYG{+w}{            }\PYG{k}{return}\PYG{+w}{ }\PYG{n}{readResults}\PYG{p}{;}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}

\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}summary\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// Writes a single byte to the pipe}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}/summary\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}param name=\PYGZdq{}b\PYGZdq{}\PYGZgt{}The byte to write\PYGZlt{}/param\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}returns\PYGZgt{}\PYGZlt{}/returns\PYGZgt{}}
\PYG{+w}{        }\PYG{k}{public}\PYG{+w}{ }\PYG{k+kt}{bool}\PYG{+w}{ }\PYG{n+nf}{WriteByte}\PYG{p}{(}\PYG{k+kt}{byte}\PYG{+w}{ }\PYG{n}{b}\PYG{p}{)}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}
\PYG{+w}{            }\PYG{k}{try}
\PYG{+w}{            }\PYG{p}{\PYGZob{}}
\PYG{+w}{                }\PYG{n}{pipeStream}\PYG{p}{.}\PYG{n}{WriteByte}\PYG{p}{(}\PYG{n}{b}\PYG{p}{);}
\PYG{+w}{                }\PYG{k}{return}\PYG{+w}{ }\PYG{k}{true}\PYG{p}{;}
\PYG{+w}{            }\PYG{p}{\PYGZcb{}}
\PYG{+w}{            }\PYG{k}{catch}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{Exception}\PYG{+w}{ }\PYG{n}{e}\PYG{p}{)}
\PYG{+w}{            }\PYG{p}{\PYGZob{}}
\PYG{+w}{                }\PYG{n}{Trace}\PYG{p}{.}\PYG{n}{WriteLine}\PYG{p}{(}\PYG{n}{e}\PYG{p}{.}\PYG{n}{Message}\PYG{p}{);}
\PYG{+w}{                }\PYG{k}{return}\PYG{+w}{ }\PYG{k}{false}\PYG{p}{;}
\PYG{+w}{            }\PYG{p}{\PYGZcb{}}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}

\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}summary\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// Performs a handshake with the client where server dictates the field length}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}/summary\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}param name=\PYGZdq{}fieldLength\PYGZdq{}\PYGZgt{}The size of the simulation domain\PYGZlt{}/param\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}returns\PYGZgt{}true if successful, false if handshake failed\PYGZlt{}/returns\PYGZgt{}}
\PYG{+w}{        }\PYG{k}{public}\PYG{+w}{ }\PYG{k+kt}{bool}\PYG{+w}{ }\PYG{n+nf}{Handshake}\PYG{p}{(}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{iMax}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{jMax}\PYG{p}{)}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}
\PYG{+w}{            }\PYG{k+kt}{byte}\PYG{p}{[]}\PYG{+w}{ }\PYG{n}{buffer}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{new}\PYG{+w}{ }\PYG{k+kt}{byte}\PYG{p}{[}\PYG{l+m}{12}\PYG{p}{];}
\PYG{+w}{            }\PYG{n}{WriteByte}\PYG{p}{(}\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Status}\PYG{p}{.}\PYG{n}{HELLO}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// Send a HELLO byte}
\PYG{+w}{            }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{AttemptRead}\PYG{p}{().}\PYG{n}{data}\PYG{p}{[}\PYG{l+m}{0}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Status}\PYG{p}{.}\PYG{n}{HELLO}\PYG{p}{)}\PYG{+w}{ }\PYG{c+c1}{// Handshake not completed}
\PYG{+w}{            }\PYG{p}{\PYGZob{}}
\PYG{+w}{                }\PYG{k}{return}\PYG{+w}{ }\PYG{k}{false}\PYG{p}{;}
\PYG{+w}{            }\PYG{p}{\PYGZcb{}}

\PYG{+w}{            }\PYG{n}{pipeStream}\PYG{p}{.}\PYG{n}{WaitForPipeDrain}\PYG{p}{();}

\PYG{+w}{            }\PYG{n}{buffer}\PYG{p}{[}\PYG{l+m}{0}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{byte}\PYG{p}{)(}\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Marker}\PYG{p}{.}\PYG{n}{PRMSTART}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Marker}\PYG{p}{.}\PYG{n}{IMAX}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// Send PRMSTART with iMax}
\PYG{+w}{            }\PYG{n}{SerialisePrimitive}\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m}{1}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{iMax}\PYG{p}{);}
\PYG{+w}{            }\PYG{n}{buffer}\PYG{p}{[}\PYG{l+m}{5}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{byte}\PYG{p}{)(}\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Marker}\PYG{p}{.}\PYG{n}{PRMEND}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Marker}\PYG{p}{.}\PYG{n}{IMAX}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// Send corresponding PRMEND}

\PYG{+w}{            }\PYG{n}{buffer}\PYG{p}{[}\PYG{l+m}{6}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{byte}\PYG{p}{)(}\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Marker}\PYG{p}{.}\PYG{n}{PRMSTART}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Marker}\PYG{p}{.}\PYG{n}{JMAX}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// Send PRMSTART with jMax}
\PYG{+w}{            }\PYG{n}{SerialisePrimitive}\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m}{7}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{jMax}\PYG{p}{);}
\PYG{+w}{            }\PYG{n}{buffer}\PYG{p}{[}\PYG{l+m}{11}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{byte}\PYG{p}{)(}\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Marker}\PYG{p}{.}\PYG{n}{PRMEND}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Marker}\PYG{p}{.}\PYG{n}{IMAX}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// Send PRMEND}

\PYG{+w}{            }\PYG{n}{pipeStream}\PYG{p}{.}\PYG{n}{Write}\PYG{p}{(}\PYG{k}{new}\PYG{+w}{ }\PYG{n}{ReadOnlySpan}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{byte}\PYG{o}{\PYGZgt{}}\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{));}

\PYG{+w}{            }\PYG{n}{pipeStream}\PYG{p}{.}\PYG{n}{WaitForPipeDrain}\PYG{p}{();}

\PYG{+w}{            }\PYG{n}{ReadResults}\PYG{+w}{ }\PYG{n}{readResults}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{AttemptRead}\PYG{p}{();}
\PYG{+w}{            }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{readResults}\PYG{p}{.}\PYG{n}{anythingRead}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{k}{false}\PYG{+w}{ }\PYG{o}{||}\PYG{+w}{ }\PYG{n}{readResults}\PYG{p}{.}\PYG{n}{data}\PYG{p}{[}\PYG{l+m}{0}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Status}\PYG{p}{.}\PYG{n}{OK}\PYG{p}{)}\PYG{+w}{ }\PYG{c+c1}{// If nothing was read or no OK byte, param read was unsuccessful}
\PYG{+w}{            }\PYG{p}{\PYGZob{}}
\PYG{+w}{                }\PYG{k}{return}\PYG{+w}{ }\PYG{k}{false}\PYG{p}{;}
\PYG{+w}{            }\PYG{p}{\PYGZcb{}}
\PYG{+w}{            }\PYG{k}{return}\PYG{+w}{ }\PYG{k}{true}\PYG{p}{;}

\PYG{+w}{        }\PYG{p}{\PYGZcb{}}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}summary\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// Performs a handshake with the client where the client dictates the field length}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}/summary\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}returns\PYGZgt{}The field length, or 0 if handshake failed\PYGZlt{}/returns\PYGZgt{}}
\PYG{+w}{        }\PYG{k}{public}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{int}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{p}{)}\PYG{+w}{ }\PYG{n}{Handshake}\PYG{p}{()}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}
\PYG{+w}{            }\PYG{n}{pipeStream}\PYG{p}{.}\PYG{n}{WriteByte}\PYG{p}{(}\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Status}\PYG{p}{.}\PYG{n}{HELLO}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// Write a HELLO byte, backend dictates field dimensions}
\PYG{+w}{            }\PYG{n}{pipeStream}\PYG{p}{.}\PYG{n}{WaitForPipeDrain}\PYG{p}{();}

\PYG{+w}{            }\PYG{n}{ReadResults}\PYG{+w}{ }\PYG{n}{readResults}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{AttemptRead}\PYG{p}{();}
\PYG{+w}{            }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{o}{!}\PYG{n}{readResults}\PYG{p}{.}\PYG{n}{anythingRead}\PYG{+w}{ }\PYG{o}{||}\PYG{+w}{ }\PYG{n}{readResults}\PYG{p}{.}\PYG{n}{data}\PYG{p}{[}\PYG{l+m}{0}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Status}\PYG{p}{.}\PYG{n}{HELLO}\PYG{p}{)}
\PYG{+w}{            }\PYG{p}{\PYGZob{}}
\PYG{+w}{                }\PYG{k}{return}\PYG{+w}{ }\PYG{p}{(}\PYG{l+m}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m}{0}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// Error case}
\PYG{+w}{            }\PYG{p}{\PYGZcb{}}

\PYG{+w}{            }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{readResults}\PYG{p}{.}\PYG{n}{data}\PYG{p}{[}\PYG{l+m}{1}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Marker}\PYG{p}{.}\PYG{n}{PRMSTART}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Marker}\PYG{p}{.}\PYG{n}{IMAX}\PYG{p}{))}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{k}{return}\PYG{+w}{ }\PYG{p}{(}\PYG{l+m}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m}{0}\PYG{p}{);}\PYG{+w}{ }\PYG{p}{\PYGZcb{}}\PYG{+w}{ }\PYG{c+c1}{// Should start with PRMSTART}
\PYG{+w}{            }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{iMax}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{BitConverter}\PYG{p}{.}\PYG{n}{ToInt32}\PYG{p}{(}\PYG{n}{readResults}\PYG{p}{.}\PYG{n}{data}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m}{2}\PYG{p}{);}
\PYG{+w}{            }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{readResults}\PYG{p}{.}\PYG{n}{data}\PYG{p}{[}\PYG{l+m}{6}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Marker}\PYG{p}{.}\PYG{n}{PRMEND}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Marker}\PYG{p}{.}\PYG{n}{IMAX}\PYG{p}{))}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{k}{return}\PYG{+w}{ }\PYG{p}{(}\PYG{l+m}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m}{0}\PYG{p}{);}\PYG{+w}{ }\PYG{p}{\PYGZcb{}}\PYG{+w}{ }\PYG{c+c1}{// Should end with PRMEND}

\PYG{+w}{            }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{readResults}\PYG{p}{.}\PYG{n}{data}\PYG{p}{[}\PYG{l+m}{7}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Marker}\PYG{p}{.}\PYG{n}{PRMSTART}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Marker}\PYG{p}{.}\PYG{n}{JMAX}\PYG{p}{))}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{k}{return}\PYG{+w}{ }\PYG{p}{(}\PYG{l+m}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m}{0}\PYG{p}{);}\PYG{+w}{ }\PYG{p}{\PYGZcb{}}
\PYG{+w}{            }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{jMax}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{BitConverter}\PYG{p}{.}\PYG{n}{ToInt32}\PYG{p}{(}\PYG{n}{readResults}\PYG{p}{.}\PYG{n}{data}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m}{8}\PYG{p}{);}
\PYG{+w}{            }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{readResults}\PYG{p}{.}\PYG{n}{data}\PYG{p}{[}\PYG{l+m}{12}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Marker}\PYG{p}{.}\PYG{n}{PRMEND}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Marker}\PYG{p}{.}\PYG{n}{JMAX}\PYG{p}{))}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{k}{return}\PYG{+w}{ }\PYG{p}{(}\PYG{l+m}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m}{0}\PYG{p}{);}\PYG{+w}{ }\PYG{p}{\PYGZcb{}}

\PYG{+w}{            }\PYG{n}{WriteByte}\PYG{p}{(}\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Status}\PYG{p}{.}\PYG{n}{OK}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// Send an OK byte to show the transmission was successful}

\PYG{+w}{            }\PYG{k}{return}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{iMax}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{jMax}\PYG{p}{);}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}

\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}summary\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// Wrapper method that waits for the backend to connect to the pipe.}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}/summary\PYGZgt{}}
\PYG{+w}{        }\PYG{k}{public}\PYG{+w}{ }\PYG{k}{void}\PYG{+w}{ }\PYG{n+nf}{WaitForConnection}\PYG{p}{()}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}
\PYG{+w}{            }\PYG{n}{pipeStream}\PYG{p}{.}\PYG{n}{WaitForConnection}\PYG{p}{();}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}

\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}summary\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// Sends a parameter to the backend}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}/summary\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}param name=\PYGZdq{}parameter\PYGZdq{}\PYGZgt{}The value of the parameter to send\PYGZlt{}/param\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}param name=\PYGZdq{}bits\PYGZdq{}\PYGZgt{}The bits corresponding to the parameter, as read from \PYGZlt{}c\PYGZgt{}PipeConstants\PYGZlt{}/c\PYGZgt{}\PYGZlt{}/param\PYGZgt{}}
\PYG{+w}{        }\PYG{k}{public}\PYG{+w}{ }\PYG{k}{void}\PYG{+w}{ }\PYG{n+nf}{SendParameter}\PYG{p}{(}\PYG{k+kt}{float}\PYG{+w}{ }\PYG{n}{parameter}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{byte}\PYG{+w}{ }\PYG{n}{bits}\PYG{p}{)}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}
\PYG{+w}{            }\PYG{k+kt}{byte}\PYG{p}{[]}\PYG{+w}{ }\PYG{n}{buffer}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{new}\PYG{+w}{ }\PYG{k+kt}{byte}\PYG{p}{[}\PYG{l+m}{6}\PYG{p}{];}
\PYG{+w}{            }\PYG{n}{buffer}\PYG{p}{[}\PYG{l+m}{0}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{byte}\PYG{p}{)(}\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Marker}\PYG{p}{.}\PYG{n}{PRMSTART}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{n}{bits}\PYG{p}{);}
\PYG{+w}{            }\PYG{n}{SerialisePrimitive}\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m}{1}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{parameter}\PYG{p}{);}
\PYG{+w}{            }\PYG{n}{buffer}\PYG{p}{[}\PYG{l+m}{5}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{byte}\PYG{p}{)(}\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Marker}\PYG{p}{.}\PYG{n}{PRMEND}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{n}{bits}\PYG{p}{);}
\PYG{+w}{            }\PYG{n}{pipeStream}\PYG{p}{.}\PYG{n}{Write}\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{buffer}\PYG{p}{.}\PYG{n}{Length}\PYG{p}{);}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}

\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}summary\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// Sends a parameter to the backend}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}/summary\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}param name=\PYGZdq{}parameter\PYGZdq{}\PYGZgt{}The value of the parameter to send\PYGZlt{}/param\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}param name=\PYGZdq{}bits\PYGZdq{}\PYGZgt{}The bits corresponding to the parameter, as read from \PYGZlt{}c\PYGZgt{}PipeConstants\PYGZlt{}/c\PYGZgt{}\PYGZlt{}/param\PYGZgt{}}
\PYG{+w}{        }\PYG{k}{public}\PYG{+w}{ }\PYG{k}{void}\PYG{+w}{ }\PYG{n+nf}{SendParameter}\PYG{p}{(}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{parameter}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{byte}\PYG{+w}{ }\PYG{n}{bits}\PYG{p}{)}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}
\PYG{+w}{            }\PYG{k+kt}{byte}\PYG{p}{[]}\PYG{+w}{ }\PYG{n}{buffer}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{new}\PYG{+w}{ }\PYG{k+kt}{byte}\PYG{p}{[}\PYG{l+m}{6}\PYG{p}{];}
\PYG{+w}{            }\PYG{n}{buffer}\PYG{p}{[}\PYG{l+m}{0}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{byte}\PYG{p}{)(}\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Marker}\PYG{p}{.}\PYG{n}{PRMSTART}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{n}{bits}\PYG{p}{);}
\PYG{+w}{            }\PYG{n}{SerialisePrimitive}\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m}{1}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{parameter}\PYG{p}{);}
\PYG{+w}{            }\PYG{n}{buffer}\PYG{p}{[}\PYG{l+m}{5}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{byte}\PYG{p}{)(}\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Marker}\PYG{p}{.}\PYG{n}{PRMEND}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{n}{bits}\PYG{p}{);}
\PYG{+w}{            }\PYG{n}{pipeStream}\PYG{p}{.}\PYG{n}{Write}\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{buffer}\PYG{p}{.}\PYG{n}{Length}\PYG{p}{);}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}

\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}summary\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// Serialises and sends obstacle data through the pipe.}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}/summary\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}param name=\PYGZdq{}obstacles\PYGZdq{}\PYGZgt{}A boolean array indicating whether each cell is an obstacle cell or fluid cell.\PYGZlt{}/param\PYGZgt{}}
\PYG{+w}{        }\PYG{c+c1}{/// \PYGZlt{}returns\PYGZgt{}A boolean indicating whether the transmission was successful.\PYGZlt{}/returns\PYGZgt{}}
\PYG{+w}{        }\PYG{k}{public}\PYG{+w}{ }\PYG{k+kt}{bool}\PYG{+w}{ }\PYG{n+nf}{SendObstacles}\PYG{p}{(}\PYG{k+kt}{bool}\PYG{p}{[]}\PYG{+w}{ }\PYG{n}{obstacles}\PYG{p}{)}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}
\PYG{+w}{            }\PYG{k+kt}{byte}\PYG{p}{[]}\PYG{+w}{ }\PYG{n}{buffer}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{new}\PYG{+w}{ }\PYG{k+kt}{byte}\PYG{p}{[}\PYG{n}{obstacles}\PYG{p}{.}\PYG{n}{Length}\PYG{+w}{ }\PYG{o}{/}\PYG{+w}{ }\PYG{l+m}{8}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{obstacles}\PYG{p}{.}\PYG{n}{Length}\PYG{+w}{ }\PYG{o}{\PYGZpc{}}\PYG{+w}{ }\PYG{l+m}{8}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{l+m}{0}\PYG{+w}{ }\PYG{o}{?}\PYG{+w}{ }\PYG{l+m}{0}\PYG{+w}{ }\PYG{p}{:}\PYG{+w}{ }\PYG{l+m}{1}\PYG{p}{)}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{l+m}{1}\PYG{p}{];}\PYG{+w}{ }\PYG{c+c1}{// Divide the length by 8 and add one if the length does not divide evenly. Also add 1 byte for FLDEND}
\PYG{+w}{            }\PYG{n}{WriteByte}\PYG{p}{((}\PYG{k+kt}{byte}\PYG{p}{)(}\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Marker}\PYG{p}{.}\PYG{n}{FLDSTART}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Marker}\PYG{p}{.}\PYG{n}{OBST}\PYG{p}{));}\PYG{+w}{ }\PYG{c+c1}{// Put a FLDSTART marker at the start}
\PYG{+w}{            }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{index}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m}{0}\PYG{p}{;}
\PYG{+w}{            }\PYG{k}{for}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{i}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m}{0}\PYG{p}{;}\PYG{+w}{ }\PYG{n}{i}\PYG{+w}{ }\PYG{o}{\PYGZlt{}}\PYG{+w}{ }\PYG{n}{obstacles}\PYG{p}{.}\PYG{n}{Length}\PYG{p}{;}\PYG{+w}{ }\PYG{n}{i}\PYG{o}{++}\PYG{p}{)}
\PYG{+w}{            }\PYG{p}{\PYGZob{}}
\PYG{+w}{                }\PYG{n}{buffer}\PYG{p}{[}\PYG{n}{index}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{|=}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{byte}\PYG{p}{)((}\PYG{n}{obstacles}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{?}\PYG{+w}{ }\PYG{l+m}{1}\PYG{+w}{ }\PYG{p}{:}\PYG{+w}{ }\PYG{l+m}{0}\PYG{p}{)}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{n}{i}\PYG{+w}{ }\PYG{o}{\PYGZpc{}}\PYG{+w}{ }\PYG{l+m}{8}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// Convert the bool to 1 or 0, shift it left the relevant amount of times and OR it with the current value in the buffer}
\PYG{+w}{                }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{i}\PYG{+w}{ }\PYG{o}{\PYGZpc{}}\PYG{+w}{ }\PYG{l+m}{8}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{l+m}{7}\PYG{p}{)}\PYG{+w}{ }\PYG{c+c1}{// Add one to the index if the byte is full}
\PYG{+w}{                }\PYG{p}{\PYGZob{}}
\PYG{+w}{                    }\PYG{n}{index}\PYG{o}{++}\PYG{p}{;}
\PYG{+w}{                }\PYG{p}{\PYGZcb{}}
\PYG{+w}{            }\PYG{p}{\PYGZcb{}}
\PYG{+w}{            }\PYG{n}{buffer}\PYG{p}{[}\PYG{o}{\PYGZca{}}\PYG{l+m}{1}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{p}{(}\PYG{k+kt}{byte}\PYG{p}{)(}\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Marker}\PYG{p}{.}\PYG{n}{FLDEND}\PYG{+w}{ }\PYG{o}{|}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Marker}\PYG{p}{.}\PYG{n}{OBST}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// And put a FLDEND at the end (\PYGZca{}1 gets the last element of the array)}

\PYG{+w}{            }\PYG{n}{pipeStream}\PYG{p}{.}\PYG{n}{Write}\PYG{p}{(}\PYG{n}{buffer}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m}{0}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{buffer}\PYG{p}{.}\PYG{n}{Length}\PYG{p}{);}

\PYG{+w}{            }\PYG{n}{ReadResults}\PYG{+w}{ }\PYG{n}{readResults}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{AttemptRead}\PYG{p}{();}

\PYG{+w}{            }\PYG{k}{return}\PYG{+w}{ }\PYG{n}{readResults}\PYG{p}{.}\PYG{n}{anythingRead}\PYG{+w}{ }\PYG{o}{\PYGZam{}\PYGZam{}}\PYG{+w}{ }\PYG{n}{readResults}\PYG{p}{.}\PYG{n}{data}\PYG{p}{[}\PYG{l+m}{0}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{n}{PipeConstants}\PYG{p}{.}\PYG{n}{Status}\PYG{p}{.}\PYG{n}{OK}\PYG{p}{;}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}

\PYG{+w}{    }\PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}

\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cp}{\PYGZsh{}ifndef BACKEND\PYGZus{}COORDINATOR\PYGZus{}H}
\PYG{c+cp}{\PYGZsh{}define BACKEND\PYGZus{}COORDINATOR\PYGZus{}H}

\PYG{c+cp}{\PYGZsh{}include}\PYG{+w}{ }\PYG{c+cpf}{\PYGZdq{}pch.h\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include}\PYG{+w}{ }\PYG{c+cpf}{\PYGZdq{}Solver.h\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include}\PYG{+w}{ }\PYG{c+cpf}{\PYGZdq{}PipeManager.h\PYGZdq{}}

\PYG{k}{class}\PYG{+w}{ }\PYG{n+nc}{BackendCoordinator}
\PYG{p}{\PYGZob{}}
\PYG{k}{private}\PYG{o}{:}
\PYG{+w}{	}\PYG{n}{PipeManager}\PYG{+w}{ }\PYG{n}{pipeManager}\PYG{p}{;}
\PYG{+w}{	}\PYG{n}{Solver}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{solver}\PYG{p}{;}

\PYG{+w}{	}\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n+nf}{UnflattenArray}\PYG{p}{(}\PYG{k+kt}{bool}\PYG{o}{**}\PYG{+w}{ }\PYG{n}{pointerArray}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{bool}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{flattenedArray}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{length}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{divisions}\PYG{p}{);}
\PYG{+w}{	}\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n+nf}{HandleRequest}\PYG{p}{(}\PYG{n}{BYTE}\PYG{+w}{ }\PYG{n}{requestByte}\PYG{p}{);}
\PYG{+w}{	}\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n+nf}{ReceiveObstacles}\PYG{p}{();}
\PYG{+w}{	}\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n+nf}{ReceiveParameters}\PYG{p}{(}\PYG{k}{const}\PYG{+w}{ }\PYG{n}{BYTE}\PYG{+w}{ }\PYG{n}{parameterBits}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{SimulationParameters}\PYG{o}{\PYGZam{}}\PYG{+w}{ }\PYG{n}{parameters}\PYG{p}{);}
\PYG{+w}{	}\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n+nf}{ReceiveData}\PYG{p}{(}\PYG{n}{BYTE}\PYG{+w}{ }\PYG{n}{startMarker}\PYG{p}{);}
\PYG{+w}{	}\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n+nf}{SetDefaultParameters}\PYG{p}{(}\PYG{n}{SimulationParameters}\PYG{o}{\PYGZam{}}\PYG{+w}{ }\PYG{n}{parameters}\PYG{p}{);}

\PYG{k}{public}\PYG{o}{:}
\PYG{+w}{	}\PYG{c+c1}{/// \PYGZlt{}summary\PYGZgt{}}
\PYG{+w}{	}\PYG{c+c1}{/// Constructor \PYGZhy{} sets up field dimensions and pipe name.}
\PYG{+w}{	}\PYG{c+c1}{/// \PYGZlt{}/summary\PYGZgt{}}
\PYG{+w}{	}\PYG{c+c1}{/// \PYGZlt{}param name=\PYGZdq{}iMax\PYGZdq{}\PYGZgt{}The width, in cells, of the simulation domain excluding boundary cells.\PYGZlt{}/param\PYGZgt{}}
\PYG{+w}{	}\PYG{c+c1}{/// \PYGZlt{}param name=\PYGZdq{}jMax\PYGZdq{}\PYGZgt{}The height, in cells, of the simulation domain excluding boundary cells.\PYGZlt{}/param\PYGZgt{}}
\PYG{+w}{	}\PYG{c+c1}{/// \PYGZlt{}param name=\PYGZdq{}pipeName\PYGZdq{}\PYGZgt{}The name of the named pipe to use for communication with the frontend.\PYGZlt{}/param\PYGZgt{}}
\PYG{+w}{	}\PYG{c+c1}{/// \PYGZlt{}param name=\PYGZdq{}solver\PYGZdq{}\PYGZgt{}The instantiated solver to use.\PYGZlt{}/param\PYGZgt{}}
\PYG{+w}{	}\PYG{n}{BackendCoordinator}\PYG{p}{(}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{iMax}\PYG{p}{,}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{jMax}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{std}\PYG{o}{::}\PYG{n}{string}\PYG{+w}{ }\PYG{n}{pipeName}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{Solver}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{sovler}\PYG{p}{);}

\PYG{+w}{	}\PYG{c+c1}{/// \PYGZlt{}summary\PYGZgt{}}
\PYG{+w}{	}\PYG{c+c1}{/// Main method for BackendCoordinator class, which handles all the data flow and computation.}
\PYG{+w}{	}\PYG{c+c1}{/// \PYGZlt{}/summary\PYGZgt{}}
\PYG{+w}{	}\PYG{c+c1}{/// \PYGZlt{}returns\PYGZgt{}An exit code to be directly returned by the program\PYGZlt{}/returns\PYGZgt{}}
\PYG{+w}{	}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n+nf}{Run}\PYG{p}{();}
\PYG{p}{\PYGZcb{};}

\PYG{c+cp}{\PYGZsh{}endif }\PYG{c+c1}{// !BACKEND\PYGZus{}COORDINATOR\PYGZus{}H}
\end{Verbatim}

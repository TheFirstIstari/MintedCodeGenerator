\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k}{using}\PYG{+w}{ }\PYG{n+nn}{System}\PYG{p}{;}

\PYG{k}{namespace}\PYG{+w}{ }\PYG{n+nn}{UserInterface.HelperClasses}
\PYG{p}{\PYGZob{}}
\PYG{+w}{    }\PYG{k}{public}\PYG{+w}{ }\PYG{k}{class}\PYG{+w}{ }\PYG{n+nc}{CircularQueue}\PYG{o}{\PYGZlt{}}\PYG{n}{T}\PYG{o}{\PYGZgt{}}\PYG{+w}{ }\PYG{p}{:}\PYG{+w}{ }\PYG{n}{Queue}\PYG{o}{\PYGZlt{}}\PYG{n}{T}\PYG{o}{\PYGZgt{}}
\PYG{+w}{    }\PYG{p}{\PYGZob{}}
\PYG{+w}{        }\PYG{c+c1}{//protected bool isFull;}
\PYG{+w}{        }\PYG{c+c1}{//protected bool isEmpty;}
\PYG{+w}{        }\PYG{k}{protected}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{count}\PYG{p}{;}

\PYG{+w}{        }\PYG{k}{public}\PYG{+w}{ }\PYG{n+nf}{CircularQueue}\PYG{p}{(}\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{length}\PYG{p}{)}\PYG{+w}{ }\PYG{p}{:}\PYG{+w}{ }\PYG{k}{base}\PYG{p}{(}\PYG{n}{length}\PYG{p}{)}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}
\PYG{+w}{            }\PYG{c+c1}{//isEmpty = true;}
\PYG{+w}{            }\PYG{n}{count}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m}{0}\PYG{p}{;}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}

\PYG{+w}{        }\PYG{k}{public}\PYG{+w}{ }\PYG{k}{override}\PYG{+w}{ }\PYG{k}{void}\PYG{+w}{ }\PYG{n+nf}{Enqueue}\PYG{p}{(}\PYG{n}{T}\PYG{+w}{ }\PYG{k}{value}\PYG{p}{)}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}
\PYG{+w}{            }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{IsFull}\PYG{p}{)}
\PYG{+w}{            }\PYG{p}{\PYGZob{}}
\PYG{+w}{                }\PYG{k}{throw}\PYG{+w}{ }\PYG{k}{new}\PYG{+w}{ }\PYG{n+nf}{InvalidOperationException}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Queue was full when Enqueue was called\PYGZdq{}}\PYG{p}{);}
\PYG{+w}{            }\PYG{p}{\PYGZcb{}}

\PYG{+w}{            }\PYG{n}{array}\PYG{p}{[}\PYG{n}{back}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{k}{value}\PYG{p}{;}
\PYG{+w}{            }\PYG{n}{back}\PYG{o}{++}\PYG{p}{;}
\PYG{+w}{            }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{back}\PYG{+w}{ }\PYG{o}{\PYGZgt{}=}\PYG{+w}{ }\PYG{n}{length}\PYG{p}{)}
\PYG{+w}{            }\PYG{p}{\PYGZob{}}
\PYG{+w}{                }\PYG{n}{back}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m}{0}\PYG{p}{;}
\PYG{+w}{            }\PYG{p}{\PYGZcb{}}
\PYG{+w}{            }\PYG{c+c1}{//isEmpty = false; //Set isEmpty to false, and IsEmpty to true if the front is equal to the back}
\PYG{+w}{            }\PYG{c+c1}{//isFull = (front == back);}
\PYG{+w}{            }\PYG{n}{count}\PYG{o}{++}\PYG{p}{;}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}

\PYG{+w}{        }\PYG{k}{public}\PYG{+w}{ }\PYG{k}{override}\PYG{+w}{ }\PYG{n}{T}\PYG{+w}{ }\PYG{n+nf}{Dequeue}\PYG{p}{()}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}
\PYG{+w}{            }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{IsEmpty}\PYG{p}{)}
\PYG{+w}{            }\PYG{p}{\PYGZob{}}
\PYG{+w}{                }\PYG{k}{throw}\PYG{+w}{ }\PYG{k}{new}\PYG{+w}{ }\PYG{n+nf}{InvalidOperationException}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Queue was empty when Dequeue was called\PYGZdq{}}\PYG{p}{);}
\PYG{+w}{            }\PYG{p}{\PYGZcb{}}

\PYG{+w}{            }\PYG{n}{T}\PYG{+w}{ }\PYG{n}{removedItem}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{array}\PYG{p}{[}\PYG{n}{front}\PYG{p}{];}
\PYG{+w}{            }\PYG{n}{front}\PYG{o}{++}\PYG{p}{;}
\PYG{+w}{            }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{front}\PYG{+w}{ }\PYG{o}{\PYGZgt{}=}\PYG{+w}{ }\PYG{n}{length}\PYG{p}{)}
\PYG{+w}{            }\PYG{p}{\PYGZob{}}
\PYG{+w}{                }\PYG{n}{front}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m}{0}\PYG{p}{;}
\PYG{+w}{            }\PYG{p}{\PYGZcb{}}
\PYG{+w}{            }\PYG{c+c1}{//isFull = false; //Set isFull to false, and isEmpty to true if the front is equal to the back}
\PYG{+w}{            }\PYG{c+c1}{//isEmpty = (front == back);}
\PYG{+w}{            }\PYG{n}{count}\PYG{o}{\PYGZhy{}\PYGZhy{}}\PYG{p}{;}

\PYG{+w}{            }\PYG{k}{return}\PYG{+w}{ }\PYG{n}{removedItem}\PYG{p}{;}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}

\PYG{+w}{        }\PYG{k}{public}\PYG{+w}{ }\PYG{k}{override}\PYG{+w}{ }\PYG{k+kt}{bool}\PYG{+w}{ }\PYG{n}{IsEmpty}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}
\PYG{+w}{            }\PYG{k}{get}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{k}{return}\PYG{+w}{ }\PYG{n}{count}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{l+m}{0}\PYG{p}{;}\PYG{+w}{ }\PYG{p}{\PYGZcb{}}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}

\PYG{+w}{        }\PYG{k}{public}\PYG{+w}{ }\PYG{k}{override}\PYG{+w}{ }\PYG{k+kt}{bool}\PYG{+w}{ }\PYG{n}{IsFull}
\PYG{+w}{        }\PYG{p}{\PYGZob{}}
\PYG{+w}{            }\PYG{k}{get}\PYG{+w}{ }\PYG{p}{\PYGZob{}}\PYG{+w}{ }\PYG{k}{return}\PYG{+w}{ }\PYG{n}{count}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{n}{length}\PYG{p}{;}\PYG{+w}{ }\PYG{p}{\PYGZcb{}}
\PYG{+w}{        }\PYG{p}{\PYGZcb{}}

\PYG{+w}{        }\PYG{k}{public}\PYG{+w}{ }\PYG{k}{override}\PYG{+w}{ }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{Count}\PYG{+w}{ }\PYG{o}{=\PYGZgt{}}\PYG{+w}{ }\PYG{n}{count}\PYG{p}{;}
\PYG{+w}{    }\PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
